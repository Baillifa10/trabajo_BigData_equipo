"0","#| echo: false"
"0",""
"0","#Paquetes utilizados en el trabajo "
"0","library(readr)"
"0","library(tidyverse)"
"0","library(plotly)"
"0","library(knitr)"
"0","library (eurostat)"
"0",""
"0",""
"0","#Datos utilizados"
"0","data <- read_csv(""datos/nrg_bal_s_1_Data.csv"")"
"2","[1mRows: [22m[34m5208[39m [1mColumns: [22m[34m7[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (5): GEO, NRG_BAL, SIEC, UNIT, Value
[32mdbl[39m (1): TIME
[33mlgl[39m (1): Flag and Footnotes"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","datar <- read_csv(""./datos/renewable_data.csv"")"
"2","[1mRows: [22m[34m663[39m [1mColumns: [22m[34m6[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (4): GEO, NRG_BAL, UNIT, Value
[32mdbl[39m (1): TIME
[33mlgl[39m (1): Flag and Footnotes"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","table_fosil <- ""nrg_ind_ffgae"" "
"0","table_combustible <- ""nrg_inf_epct"""
"0","table_renewables<- ""nrg_inf_epcrw"""
"0","table_consumo <- ""nrg_cb_sff"""
"0","table_consumoR <- ""nrg_cb_rw"""
"0","table_gas <- ""nrg_pc_202""  #DESDE 2007 (GAS)"
"0","table_gas07 <- ""nrg_pc_202_h""  #ANTES DEL 2007 (GAS)"
"0","table_elec <- ""nrg_pc_204""  #DESDE 2007 (ELECTRICIDAD)"
"0","table_elec07 <- ""nrg_pc_204_h""  #ANTES DE 2007 (ELECTRICIDAD)"
"0","table_consumoG <- ""nrg_cb_gas""  #GAS"
"0","table_consumoE <- ""nrg_cb_e""  #ELECTRICIDAD"
"0","table_inflation <- ""tec00118""  #INFLACION de 2010 a 2021"
"0",""
"0","#transformamos los datos"
"0","data <- data %>% filter(NRG_BAL == ""Total energy supply"")%>% filter(GEO != ""European Union - 27 countries (from 2020)"")%>% filter(GEO!=""Euro area - 19 countries  (from 2015)"")%>% select(TIME, GEO, Value)"
"0","data$Value <- gsub("","","""",data$Value)"
"0","data$Value <- as.numeric(data$Value)"
"2","Avis : NAs introduced by coercion"
"0","colnames(data) <- c(""year"", ""country"", ""value"")"
"0","data[data == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","data <- data%>% filter(country %in% paises)"
"0",""
"0",""
"0","datar <- datar %>% select(TIME, GEO, Value) %>% filter(GEO %in% paises)"
"0","datar[datar == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","colnames(datar) <- c(""year"", ""country"", ""value"")"
"0","datar$value <- gsub("","","""",datar$value)"
"0","datar$value <- as.numeric(datar$value)"
"0",""
"0",""
"0",""
"0","dfFosil <- get_eurostat(table_fosil, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_ind_ffgae_raw_code_FT.rds
"
"2","Table  nrg_ind_ffgae  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_ind_ffgae_raw_code_FT.rds
"
"0","df_namesFosil <- names(dfFosil)"
"0","dfFosil <- label_eurostat(dfFosil, code = df_namesFosil, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfFosil)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfFosil)"
"0","dfFosil[dfFosil == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","str(dfFosil) #Esta como numero VALUES"
"1","tibble [1,209 Ã— 10]"
"1",""
"1"," (S3: "
"1",""
"1","tbl_df/tbl/data.frame"
"1",""
"1",")"
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","unit_code  "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","""PC"" ""PC"" ""PC"" ""PC"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","geo_code   "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","""AL"" ""AT"" ""BA"" ""BE"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","flags_code "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","NA NA NA NA"
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","time_code  "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","""2020"" ""2020"" ""2020"" ""2020"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","values_code"
"1",""
"1",":"
"1"," num [1:1209] "
"1",""
"1","58.1 66.8 80.5 76.5 62.9"
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","unit       "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","""Percentage"" ""Percentage"" ""Percentage"" ""Percentage"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","geo        "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","""Albania"" ""Austria"" ""Bosnia and Herzegovina"" ""Belgium"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","flags      "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","NA NA NA NA"
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","time       "
"1",""
"1",":"
"1"," chr [1:1209] "
"1",""
"1","""2020"" ""2020"" ""2020"" ""2020"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","values     "
"1",""
"1",":"
"1"," num [1:1209] "
"1",""
"1","58.1 66.8 80.5 76.5 62.9"
"1",""
"1"," ..."
"1",""
"1","
"
"0","dfFosil <- dfFosil %>% mutate(time =  as.numeric(time))"
"0","dfFosil <- dfFosil %>% "
"0","  select(time, geo, values) %>% "
"0","  filter(geo %in% paises)"
"0","#paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0",""
"0",""
"0","df <- get_eurostat(table_combustible, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_inf_epct_raw_code_FT.rds
"
"2","Table  nrg_inf_epct  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_inf_epct_raw_code_FT.rds
"
"0","df_names <- names(df)"
"0","df <- label_eurostat(df, code = df_names, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(df)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(df)"
"0","rm(df_dicc, df_uniques)"
"0","df <- df%>%select(time, geo, values, gen_tech, operator)"
"0","df <- df %>% mutate(time =  as.numeric(time))"
"0","df[df == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","dfEngFos <- df %>%"
"0","  filter (geo %in% paises) %>%"
"0","  group_by(geo, time) %>%"
"0","  summarise(Total = sum(values))"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","colnames(dfEngFos) <- c(""pais"", ""anyo"", ""fosiles"")"
"0",""
"0",""
"0","dfr <- get_eurostat(table_renewables, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_inf_epcrw_raw_code_FT.rds
"
"2","Table  nrg_inf_epcrw  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_inf_epcrw_raw_code_FT.rds
"
"0","df_namesr <- names(dfr)"
"0","dfr <- label_eurostat(dfr, code = df_namesr, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfr)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfr)"
"0","rm(df_dicc, df_uniques)"
"0","dfr <- dfr%>%select(time, geo, values, siec)"
"0","dfr <- dfr %>% mutate(time =  as.numeric(time))"
"0","dfr[dfr == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","dfR <- dfr %>%"
"0","  filter (geo %in% paises) %>%"
"0","  group_by(geo, time) %>%"
"0","  summarise(Total = sum(values))"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","colnames(dfR) <- c(""pais"", ""anyo"", ""value"")"
"0",""
"0",""
"0","df_consumo<- get_eurostat(table_consumo, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_sff_raw_code_FT.rds
"
"2","Table  nrg_cb_sff  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_sff_raw_code_FT.rds
"
"0","df_namesC <- names(df_consumo)"
"0","df_consumo <- label_eurostat(df_consumo, code = df_namesC, fix_duplicated = TRUE)"
"0","df_diccC <- pjpv.curso.R.2022::pjp_dicc(df_consumo)"
"0","df_uniquesC <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumo)"
"0","rm(df_diccC, df_uniquesC)"
"0","df_consumo[df_consumo == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","df_consumo <- df_consumo %>% select(time, geo, values, siec)"
"0","df_consumo <- df_consumo %>% mutate(time =  as.numeric(time))"
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","df_consumo <- df_consumo %>%"
"0","  filter (geo %in% paises) %>%"
"0","  group_by(geo, time) %>%"
"0","  summarise(Total = sum(values))"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","colnames(df_consumo) <- c(""pais"", ""anyo"", ""consumo total de energias no renovables"")"
"0",""
"0",""
"0",""
"0",""
"0","df_consumoR <- get_eurostat(table_consumoR, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_rw_raw_code_FT.rds
"
"2","Table  nrg_cb_rw  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_rw_raw_code_FT.rds
"
"0","df_namesCR <- names(df_consumoR)"
"0","df_consumoR <- label_eurostat(df_consumoR, code = df_namesCR, fix_duplicated = TRUE)"
"0","df_diccCR <- pjpv.curso.R.2022::pjp_dicc(df_consumoR)"
"0","df_uniquesCR <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumoR)"
"0","rm(df_diccCR, df_uniquesCR)"
"0","df_consumoR[df_consumoR == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","df_consumoR <- df_consumoR %>% select(time, geo, values, siec)"
"0","df_consumoR <- df_consumoR %>% mutate(time =  as.numeric(time))"
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","df_consumoR <- df_consumoR %>%"
"0","  filter (geo %in% paises) %>%"
"0","  group_by(geo, time) %>%"
"0","  summarise(Total = sum(values))"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","colnames(df_consumoR) <- c(""pais"", ""anyo"", ""consumo total de energias renovables"")"
"0",""
"0",""
"0",""
"0","dfGas <- get_eurostat(table_gas, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_202_raw_code_FT.rds
"
"2","Table  nrg_pc_202  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_202_raw_code_FT.rds
"
"0","df_namesGas <- names(dfGas)"
"0","dfGas <- label_eurostat(dfGas, code = df_namesGas, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfGas)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfGas)"
"0","rm(df_dicc, df_uniques)"
"0","dfGas[dfGas == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","dfGas <- dfGas %>% mutate(time =  as.numeric(time_code))"
"2","Avis : NAs introduced by coercion"
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","dfGas <- dfGas %>%"
"0","  filter(tax == ""Excluding taxes and levies"","
"0","         currency == ""Euro"","
"0","         unit == ""Gigajoule (gross calorific value - GCV)"","
"0","         geo %in% paises) %>%"
"0","  mutate(fecha = lubridate::yq(time_code)) %>% "
"0","  mutate(periodo = lubridate::year(fecha)) %>%"
"0","  select(periodo,geo, unit, currency, values, consom) %>% "
"0","  group_by(geo, periodo) %>%"
"0","  summarise(Total = sum(values)) %>%"
"0","  filter(periodo > 2007)"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","dfGas07 <- get_eurostat(table_gas07, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_202_h_raw_code_FT.rds
"
"2","Table  nrg_pc_202_h  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_202_h_raw_code_FT.rds
"
"0","df_namesGas07 <- names(dfGas07)"
"0","dfGas07 <- label_eurostat(dfGas07, code = df_namesGas07, fix_duplicated = TRUE)"
"0","df_dicc07 <- pjpv.curso.R.2022::pjp_dicc(dfGas07)"
"0","df_uniques07 <- pjpv.curso.R.2022::pjp_valores_unicos(dfGas07)"
"0","rm(df_dicc07, df_uniques07)"
"0","dfGas07[dfGas07 == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","dfGas07 <- dfGas07 %>% mutate(time =  as.numeric(time_code))"
"2","Avis : NAs introduced by coercion"
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","dfGas07 <- dfGas07 %>%"
"0","  filter(tax == ""Excluding taxes and levies"","
"0","         currency == ""Euro"","
"0","         unit == ""Gigajoule (gross calorific value - GCV)"","
"0","         geo %in% paises) %>%"
"0","  mutate(fecha = lubridate::yq(time_code)) %>% "
"0","  mutate(periodo = lubridate::year(fecha))  %>%"
"0","  select(periodo,geo, unit, currency, values, consom) %>% "
"0","  group_by(geo, periodo) %>%"
"0","  summarise(Total = sum(values)) %>%"
"0","  filter(periodo < 2008)"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","dfElec <- get_eurostat(table_elec, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_204_raw_code_FT.rds
"
"2","Table  nrg_pc_204  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_204_raw_code_FT.rds
"
"0","df_namesElec <- names(dfElec)"
"0","dfElec <- label_eurostat(dfElec, code = df_namesElec, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfElec)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfElec)"
"0","rm(df_dicc, df_uniques)"
"0","dfElec[dfElec == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","dfElec <- dfElec %>% mutate(time =  as.numeric(time_code))"
"2","Avis : NAs introduced by coercion"
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","dfElec <- dfElec %>%"
"0","  filter(tax == ""Excluding taxes and levies"","
"0","         currency == ""Euro"","
"0","         consom != ""Consumption of kWh - all bands"","
"0","         geo %in% paises) %>%"
"0","  mutate(fecha = lubridate::yq(time_code)) %>% "
"0","  mutate(periodo = lubridate::year(fecha)) %>%"
"0","  select(periodo, geo, unit, currency, values, consom) %>% "
"0","  group_by(geo, periodo) %>%"
"0","  summarise(Total = sum(values)) %>%"
"0","  filter(periodo > 2007)"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","dfElec07 <- get_eurostat(table_elec07, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_204_h_raw_code_FT.rds
"
"2","Table  nrg_pc_204_h  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_pc_204_h_raw_code_FT.rds
"
"0","df_namesElec07 <- names(dfElec07)"
"0","dfElec07 <- label_eurostat(dfElec07, code = df_namesElec07, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfElec07)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfElec07)"
"0","rm(df_dicc, df_uniques)"
"0","dfElec07[dfElec07 == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","dfElec07 <- dfElec07 %>% mutate(time =  as.numeric(time_code))"
"2","Avis : NAs introduced by coercion"
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","dfElec07 <- dfElec07 %>%"
"0","  filter(tax == ""Excluding taxes and levies"","
"0","         currency == ""Euro"","
"0","         consom != ""Consumption of kWh - all bands"","
"0","         geo %in% paises) %>%"
"0","  mutate(fecha = lubridate::yq(time_code)) %>% "
"0","  mutate(periodo = lubridate::year(fecha)) %>%"
"0","  select(periodo, geo, unit, currency, values, consom) %>% "
"0","  group_by(geo, periodo) %>%"
"0","  summarise(Total = sum(values)) %>%"
"0","  filter(periodo < 2008)"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","df_consumoG <- get_eurostat(table_consumoG, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_gas_raw_code_FT.rds
"
"2","Table  nrg_cb_gas  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_gas_raw_code_FT.rds
"
"0","df_namesG <- names(df_consumoG)"
"0","df_consumoG <- label_eurostat(df_consumoG, code = df_namesG, fix_duplicated = TRUE)"
"0","df_diccCG <- pjpv.curso.R.2022::pjp_dicc(df_consumoG)"
"0","df_uniquesCG <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumoG)"
"0","rm(df_diccCG, df_uniquesCG)"
"0","df_consumoG[df_consumoG == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","df_consumoG <- df_consumoG %>% mutate(time =  as.numeric(time))"
"0","df_consumoG <- df_consumoG %>% "
"0","  filter(unit == ""Terajoule (gross calorific value - GCV)"") %>%"
"0","  select(time, geo, values, siec, unit) %>%"
"0","  filter(geo %in% paises)  %>%"
"0","  group_by(geo, time) %>%"
"0","  summarise(Total = sum(values))"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","df_consumoE <- get_eurostat(table_consumoE, time_format = 'raw', keepFlags = TRUE)"
"2","Reading cache file C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_e_raw_code_FT.rds
"
"2","Table  nrg_cb_e  read from cache file:  C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/nrg_cb_e_raw_code_FT.rds
"
"0","df_namesE <- names(df_consumoE)"
"0","df_consumoE <- label_eurostat(df_consumoE, code = df_namesE, fix_duplicated = TRUE)"
"0","df_diccCE <- pjpv.curso.R.2022::pjp_dicc(df_consumoE)"
"0","df_uniquesCE <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumoE)"
"0","rm(df_diccCE, df_uniquesCE)"
"0","df_consumoE[df_consumoE == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","df_consumoE <- df_consumoE %>% mutate(time =  as.numeric(time))"
"0","df_consumoE <- df_consumoE %>%"
"0","  select(time, geo, values, siec, unit) %>%"
"0","  filter(geo %in% paises)  %>%"
"0","  group_by(geo, time) %>%"
"0","  summarise(Total = sum(values))"
"2","`summarise()` has grouped output by 'geo'. You can override using the `.groups` argument."
"0","df_inflation <- get_eurostat(table_inflation, time_format = 'raw', keepFlags = TRUE)"
"2","trying URL 'https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?sort=1&file=data%2Ftec00118.tsv.gz'
"
"2","Content type 'application/octet-stream;charset=UTF-8'"
"2"," length 1058 bytes
"
"2","downloaded 1058 bytes

"
"2","Table tec00118 cached at C:\Users\adeli\AppData\Local\Temp\RtmpAd6FYd/eurostat/tec00118_raw_code_FT.rds
"
"0","df_namesInf <- names(df_inflation)"
"0","df_inflation <- label_eurostat(df_inflation, code = df_namesInf, fix_duplicated = TRUE)"
"0","df_dicc <- pjpv.curso.R.2022::pjp_dicc(df_inflation)"
"0","df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(df_inflation)"
"0","rm(df_dicc, df_uniques)"
"0","df_inflation[df_inflation == ""Germany (until 1990 former territory of the FRG)""] <- ""Germany"""
"0","paises <- c(""Spain"",""France"", ""Sweden"", ""Denmark"", ""Italy"", ""Norway"", ""Germany"")"
"0","df_inflation <- df_inflation %>% mutate(time =  as.numeric(time))"
"0","df_inflation0 <- df_inflation %>%"
"0","  select(time, geo, values, unit) %>%"
"0","  filter(geo %in% paises)"
