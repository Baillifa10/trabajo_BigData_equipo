---
title: "Las energías en Europa"
date: 2022-12-23  #- ISO8601 YYYY-MM-DD format 
date-format: short
format: 
  revealjs:
    scrollable: true
    slide-level: 2
    height: 900
    width: 1600
    toc: false
    center-title-slide: true
    title-slide-attributes: #- atributos para la slide de titulo
      data-background-color: "#036f7b"   #- color de R-ladies
    preview-links: auto  #- true: abre un iframe en lugar de abrir ventana
    link-external-newwindow: true
    transition: fade
    fontcolor: "#262d36"
    highlight-style: a11y
    code-line-numbers: true
    number-sections: false
    slide-number: c/t  
    incremental: false   
footer: |
  Slides hechas con [Quarto](https://quarto.org/) 

---

## Contexto {background-color="#036f7b"}

Con nuestro trabajo pretendemos obtener una visión general de la situación energética actual en Europa.

Sobre todo porque, con el calentamiento global y la guerra de Ucrania, las energías se han convertido últimamente en un tema muy controvertido. Los Estados intentan cada vez más reducir su consumo y utilizar energías renovables.

Así, examinaremos varios puntos:

## Introducción {background-color="#036f7b"}

1.  El consumo de las energías
2.  Los tipos de energías utilizadas
3.  La producción de energías
4.  Los precios de las energías

```{r}
#| echo: false
my_url <- "https://www.terrain-construction.com/content/wp-content/uploads/2019/01/Maison-et-Energies-Renouvelables.jpg"
```

![](https://www.terrain-construction.com/content/wp-content/uploads/2019/01/Maison-et-Energies-Renouvelables.jpg)

::: aside
Los datos vienen de Eurostat
:::


```{r}
#| code-fold: true

#Paquetes utilizados en el trabajo 
library(readr)
library(tidyverse)
library(plotly)
library(knitr)
library(eurostat)
library(gganimate)


#Datos utilizados
table_data <- "nrg_bal_s"
table_datar <- "nrg_ind_ren"
table_fosil <- "nrg_ind_ffgae"
table_combustible <- "nrg_inf_epc"
table_rw <- "nrg_inf_epc"
table_renewables<- "nrg_inf_epcrw"
table_consumo <- "nrg_cb_sff"
table_consumoR <- "nrg_cb_rw"
table_gas <- "nrg_pc_202"  #DESDE 2007 (GAS)
table_gas07 <- "nrg_pc_202_h"  #ANTES DEL 2007 (GAS)
table_elec <- "nrg_pc_204"  #DESDE 2007 (ELECTRICIDAD)
table_elec07 <- "nrg_pc_204_h"  #ANTES DE 2007 (ELECTRICIDAD)
table_consumoG <- "nrg_cb_gas"  #GAS
table_consumoE <- "nrg_cb_e"  #ELECTRICIDAD
table_inflation <- "tec00118"  #INFLACION de 2010 a 2021

#transformamos los datos
data <- get_eurostat(table_data, time_format = 'raw', keepFlags = TRUE)
df_namesD <- names(data)
data <- label_eurostat(data, code = df_namesD, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(data)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(data)
data[data == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
data <- data %>% 
  filter(nrg_bal == "Total energy supply",
         geo %in% paises,
         siec == "Total",
         unit == "Thousand tonnes of oil equivalent") %>%
  select(time, geo, values) %>%
  mutate(time = as.numeric(time))
colnames(data) <- c("year", "country", "value")


datar<- get_eurostat(table_datar, time_format = 'raw', keepFlags = TRUE)
df_namesDr <- names(datar)
datar <- label_eurostat(datar, code = df_namesDr, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(datar)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(datar)
datar[datar == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
datar <- datar %>% 
  filter(nrg_bal == "Renewable energy sources") %>%
  filter(geo %in% paises) %>% 
  select(time, geo, values) %>% 
  mutate(time =  as.numeric(time))
colnames(datar) <- c("year", "country", "value")


dfFosil <- get_eurostat(table_fosil, time_format = 'raw', keepFlags = TRUE)
df_namesFosil <- names(dfFosil)
dfFosil <- label_eurostat(dfFosil, code = df_namesFosil, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfFosil)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfFosil)
dfFosil[dfFosil == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
str(dfFosil) #Esta como numero VALUES
dfFosil <- dfFosil %>% mutate(time =  as.numeric(time))
dfFosil <- dfFosil %>% 
  select(time, geo, values) %>% 
  filter(geo %in% paises)
#paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")


df <- get_eurostat(table_combustible, time_format = 'raw', keepFlags = TRUE)
df_names <- names(df)
df <- label_eurostat(df, code = df_names, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(df)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(df)
rm(df_dicc, df_uniques)
df[df == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
dfEngFos <- df %>% filter (siec == c("Nuclear fuels and other fuels n.e.c.", "Combustible fuels"),
                   geo %in% paises) %>%
  select(time,geo,unit, values, operator) %>%
  mutate(time = as.numeric(time)) %>%
  group_by(geo, time) %>%
  summarise(Total = sum(values)) %>% 
  filter(Total != 0)
colnames(dfEngFos) <- c("pais", "anyo", "fosiles")



df_rw<- get_eurostat(table_rw, time_format = 'raw', keepFlags = TRUE)
df_namesrw <- names(df_rw)
df_rw <- label_eurostat(df_rw, code = df_namesrw, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(df_rw)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(df_rw)
rm(df_dicc, df_uniques)
df_rw[df_rw == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
eng_rw <- c("Tide, wave, ocean", "Solar photovoltaic",
            "Solar thermal", "Wind", "Geothermal",
            "Pumped hydro power", "Mixed hydro power",
            "Pure hydro power", "Hydro")
dfEngR <- df_rw %>% filter (siec %in% eng_rw,
                           geo %in% paises) %>%
  select(time,geo,unit, values, operator) %>%
  mutate(time = as.numeric(time)) %>%
  group_by(geo, time) %>%
  summarise(Total = sum(values)) %>% 
  filter(Total != 0)
colnames(dfEngR) <- c("pais", "anyo", "fosiles")


df_consumo<- get_eurostat(table_consumo, time_format = 'raw', keepFlags = TRUE)
df_namesC <- names(df_consumo)
df_consumo <- label_eurostat(df_consumo, code = df_namesC, fix_duplicated = TRUE)
df_diccC <- pjpv.curso.R.2022::pjp_dicc(df_consumo)
df_uniquesC <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumo)
rm(df_diccC, df_uniquesC)
df_consumo[df_consumo == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
df_consumo <- df_consumo %>% select(time, geo, values, siec)
df_consumo <- df_consumo %>% mutate(time =  as.numeric(time))
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
df_consumo <- df_consumo %>%
  filter (geo %in% paises) %>%
  group_by(geo, time) %>%
  summarise(Total = sum(values))
colnames(df_consumo) <- c("pais", "anyo", "consumo total de energias no renovables")



df_consumoR <- get_eurostat(table_consumoR, time_format = 'raw', keepFlags = TRUE)
df_namesCR <- names(df_consumoR)
df_consumoR <- label_eurostat(df_consumoR, code = df_namesCR, fix_duplicated = TRUE)
df_diccCR <- pjpv.curso.R.2022::pjp_dicc(df_consumoR)
df_uniquesCR <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumoR)
rm(df_diccCR, df_uniquesCR)
df_consumoR[df_consumoR == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
df_consumoR <- df_consumoR %>% select(time, geo, values, siec)
df_consumoR <- df_consumoR %>% mutate(time =  as.numeric(time))
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
df_consumoR <- df_consumoR %>%
  filter (geo %in% paises) %>%
  group_by(geo, time) %>%
  summarise(Total = sum(values))
colnames(df_consumoR) <- c("pais", "anyo", "consumo total de energias renovables")



dfGas <- get_eurostat(table_gas, time_format = 'raw', keepFlags = TRUE)
df_namesGas <- names(dfGas)
dfGas <- label_eurostat(dfGas, code = df_namesGas, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfGas)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfGas)
rm(df_dicc, df_uniques)
dfGas[dfGas == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
dfGas <- dfGas %>% mutate(time =  as.numeric(time_code))
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
dfGas <- dfGas %>%
  filter(tax == "Excluding taxes and levies",
         currency == "Euro",
         unit == "Gigajoule (gross calorific value - GCV)",
         geo %in% paises) %>%
  mutate(fecha = lubridate::yq(time_code)) %>% 
  mutate(periodo = lubridate::year(fecha)) %>%
  select(periodo,geo, geo_code,unit, currency, values, consom) %>% 
  group_by(geo, periodo, geo_code) %>%
  summarise(Total = sum(values)) %>%
  filter(periodo > 2007)


dfGas07 <- get_eurostat(table_gas07, time_format = 'raw', keepFlags = TRUE)
df_namesGas07 <- names(dfGas07)
dfGas07 <- label_eurostat(dfGas07, code = df_namesGas07, fix_duplicated = TRUE)
df_dicc07 <- pjpv.curso.R.2022::pjp_dicc(dfGas07)
df_uniques07 <- pjpv.curso.R.2022::pjp_valores_unicos(dfGas07)
rm(df_dicc07, df_uniques07)
dfGas07[dfGas07 == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
dfGas07 <- dfGas07 %>% mutate(time =  as.numeric(time_code))
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
dfGas07 <- dfGas07 %>%
  filter(tax == "Excluding taxes and levies",
         currency == "Euro",
         unit == "Gigajoule (gross calorific value - GCV)",
         geo %in% paises) %>%
  mutate(fecha = lubridate::yq(time_code)) %>% 
  mutate(periodo = lubridate::year(fecha))  %>%
  select(periodo,geo, geo_code,unit, currency, values, consom) %>% 
  group_by(geo, periodo, geo_code) %>%
  summarise(Total = sum(values)) %>%
  filter(periodo < 2008)
 



dfElec <- get_eurostat(table_elec, time_format = 'raw', keepFlags = TRUE)
df_namesElec <- names(dfElec)
dfElec <- label_eurostat(dfElec, code = df_namesElec, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfElec)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfElec)
rm(df_dicc, df_uniques)
dfElec[dfElec == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
dfElec <- dfElec %>% mutate(time =  as.numeric(time_code))
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
dfElec <- dfElec %>%
  filter(tax == "Excluding taxes and levies",
         currency == "Euro",
         consom != "Consumption of kWh - all bands",
         geo %in% paises) %>%
  mutate(fecha = lubridate::yq(time_code)) %>% 
  mutate(periodo = lubridate::year(fecha)) %>%
  select(periodo, geo, geo_code, unit, currency, values, consom) %>% 
  group_by(geo, periodo, geo_code) %>%
  summarise(Total = sum(values)) %>%
  filter(periodo > 2007)



dfElec07 <- get_eurostat(table_elec07, time_format = 'raw', keepFlags = TRUE)
df_namesElec07 <- names(dfElec07)
dfElec07 <- label_eurostat(dfElec07, code = df_namesElec07, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(dfElec07)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(dfElec07)
rm(df_dicc, df_uniques)
dfElec07[dfElec07 == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
dfElec07 <- dfElec07 %>% mutate(time =  as.numeric(time_code))
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
dfElec07 <- dfElec07 %>%
  filter(tax == "Excluding taxes and levies",
         currency == "Euro",
         consom != "Consumption of kWh - all bands",
         geo %in% paises) %>%
  mutate(fecha = lubridate::yq(time_code)) %>% 
  mutate(periodo = lubridate::year(fecha)) %>%
  select(periodo, geo, geo_code, unit, currency, values, consom) %>% 
  group_by(geo, periodo, geo_code) %>%
  summarise(Total = sum(values)) %>%
  filter(periodo < 2008)


df_consumoG <- get_eurostat(table_consumoG, time_format = 'raw', keepFlags = TRUE)
df_namesG <- names(df_consumoG)
df_consumoG <- label_eurostat(df_consumoG, code = df_namesG, fix_duplicated = TRUE)
df_diccCG <- pjpv.curso.R.2022::pjp_dicc(df_consumoG)
df_uniquesCG <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumoG)
rm(df_diccCG, df_uniquesCG)
df_consumoG[df_consumoG == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
df_consumoG <- df_consumoG %>% mutate(time =  as.numeric(time))
df_consumoG <- df_consumoG %>% 
  filter(unit == "Terajoule (gross calorific value - GCV)") %>%
  select(time, geo, values, siec, unit) %>%
  filter(geo %in% paises)  %>%
  group_by(geo, time) %>%
  summarise(Total = sum(values))



df_consumoE <- get_eurostat(table_consumoE, time_format = 'raw', keepFlags = TRUE)
df_namesE <- names(df_consumoE)
df_consumoE <- label_eurostat(df_consumoE, code = df_namesE, fix_duplicated = TRUE)
df_diccCE <- pjpv.curso.R.2022::pjp_dicc(df_consumoE)
df_uniquesCE <- pjpv.curso.R.2022::pjp_valores_unicos(df_consumoE)
rm(df_diccCE, df_uniquesCE)
df_consumoE[df_consumoE == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
df_consumoE <- df_consumoE %>% mutate(time =  as.numeric(time))
df_consumoE <- df_consumoE %>%
  select(time, geo, values, siec, unit) %>%
  filter(geo %in% paises)  %>%
  group_by(geo, time) %>%
  summarise(Total = sum(values))



df_inflation <- get_eurostat(table_inflation, time_format = 'raw', keepFlags = TRUE)
df_namesInf <- names(df_inflation)
df_inflation <- label_eurostat(df_inflation, code = df_namesInf, fix_duplicated = TRUE)
df_dicc <- pjpv.curso.R.2022::pjp_dicc(df_inflation)
df_uniques <- pjpv.curso.R.2022::pjp_valores_unicos(df_inflation)
rm(df_dicc, df_uniques)
df_inflation[df_inflation == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
paises <- c("Spain","France", "Sweden", "Denmark", "Italy", "Norway", "Germany")
df_inflation <- df_inflation %>% mutate(time =  as.numeric(time))
df_inflation0 <- df_inflation %>%
  select(time, geo, geo_code, values) %>%
  filter(geo %in% paises)
colnames(df_inflation0) <- c("Anyo", "Pais", "geo_code","Inflacion")
```

------------------------------------------------------------------------


## El consumo de las energías globales {background-color="#036f7b"}

------------------------------------------------------------------------

### La evolución del consumo de energías



```{r}
#| echo: false
options(scipen = 999)
p1 <- data %>% ggplot(aes(x = year, y = value, color = country))+ 
   geom_point()+ geom_line(aes(color = country))+
  geom_smooth(color = "purple")+
  labs(title = "Gráfico 1: Evolución del uso de energías en países elegidos",
      subtitle = "(total energy supply)",
      caption = "Datos provenientes de Eurostat",
      x = "Años",
      y = "Tonelada equivalente de petróleo") 

plotly::ggplotly(p1)
```

::: aside
Tonelada equivalente de petróleo : unidad de medida del consumo de (41 868 000 000 J (julios) = 11 630 kWh (kilovatios-hora))
:::

------------------------------------------------------------------------

### Comparación del consumo de las energías para cada año

```{r}
#| echo: false
p2 <- data %>% filter(year >=2010) %>% ggplot(aes(x = reorder(country, -value), y=value, fill=country))+
  geom_bar(stat="identity")+
  facet_wrap(~year)+
  labs(title = "Gráfico 2: Comparación del consumo de los países para cada año",
       subtitle = "(2010-2020)",
       caption = "Datos provenientes de Eurostat") +
  xlab(NULL) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))



plotly::ggplotly(p2)
```

------------------------------------------------------------------------

### Países que más consumen

```{r}
#| echo: false
data1 <- read_csv("datos/nrg_bal_s_1_Data.csv")
data1 <- data1 %>% filter(NRG_BAL == "Total energy supply")%>% filter(GEO != "European Union - 27 countries (from 2020)")%>% filter(GEO!="Euro area - 19 countries  (from 2015)")%>% select(TIME, GEO, Value)
data1$Value <- gsub(",","",data1$Value)
data1$Value <- as.numeric(data1$Value)
colnames(data1) <- c("year", "country", "value")
data1[data1 == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
data1[data1 == "T<fc>rkiye"] <- "Turkey"
e3 <- data1 %>% filter(year == 2020)%>% slice_max(value, n=20)

e3 %>%
  knitr::kable() %>%
  kableExtra::kable_styling(font_size = 11) %>%
  kableExtra::scroll_box(width = "100%", height = "10%") %>%
    kableExtra::kable_styling(fixed_thead = list(enabled = T, 
                                               background = "#036f7b"))
```

------------------------------------------------------------------------

## El consumo según los tipos de energías {background-color="#036f7b"}

------------------------------------------------------------------------

### Las energías renovables

```{r}
#| echo: false

p4 <- datar %>% ggplot(aes(x=year, y=value, color=country))+
  geom_line()+
  labs(title = "Gráfico 4: Evolución del uso de energás renovables",
       subtitle = "(en porcentages)",
       caption = "Datos provenientes de Eurostat",
       x = "Años",
       y = "Porcentage de energías renovables")


plotly::ggplotly(p4)

```

------------------------------------------------------------------------

### Las energías fósiles

```{r}
#| echo: false
p5 <- dfFosil %>% ggplot(aes(x= time, y= values, color= geo)) +
  geom_line() +
  labs(title = "Gráfico 5: Evolución del uso de energias fosiles",
       subtitle = "(en porcentajes)",
       caption = "Datos provenientes de Eurostat",
       x = "Year",
       y = "Porcentage de energías no renovables",
       color = "Paises")

plotly::ggplotly(p5) 
```

------------------------------------------------------------------------

### Comparación energías renovables/fósiles

```{r}
#| echo: false
df_inner <- inner_join(datar, dfFosil,by = c("year" = "time", "country" = "geo"))

colnames(df_inner) <- c("anyo", "pais", "renovables", "fosiles")

p6 <- df_inner %>% ggplot( aes(x = anyo)) +
  geom_line(aes(y = renovables), color = "green") +
  geom_line(aes(y = fosiles), color = "grey") + 
  facet_grid(vars(pais)) + 
  labs(title = "Gráfico 6: Comparativa entre energias renovables y fosiles",
       subtitle = "(en porcentajes)",
       caption = "Datos provenientes de Eurostat",
       x = "Year",
       y = "Porcentaje")

plotly::ggplotly(p6)
```

------------------------------------------------------------------------

## La producción según los tipos de energías {background-color="#036f7b"}

------------------------------------------------------------------------

### Energias fósiles

```{r}
#| echo: false
p7 <- dfEngFos  %>%
  ggplot(aes(x = anyo, y = fosiles, colour = pais)) +
  geom_line() + 
  transition_reveal(anyo) +
  labs(title = "Gráfico 5: Producción de energias no renovables",
       subtitle = "(en MWh)",
       caption = "Datos provenientes de Eurostat",
       x = "Year",
       y = "Produccion de energías no renovables",
       color = "Pais")

p7
```

------------------------------------------------------------------------

### Energías renovables

```{r}
#| echo: false
p8 <- dfEngR  %>%
  ggplot(aes(x = anyo, y = fosiles, colour = pais)) +
  geom_line() + 
  labs(title = "Gráfico 6: Producción de energias renovables",
       caption = "Datos provenientes de Eurostat",
       x = "Year",
       y = "Produccion de energías renovables",
       color = "Pais")

p8 + transition_reveal(anyo)
```

------------------------------------------------------------------------

### Balance consumo/produccíon


::: {.panel-tabset}

## **Energías fósiles**
```{r}
#| echo: false
df_PyCengF <- inner_join(dfEngFos, df_consumo,by = c("pais" = "pais", "anyo" = "anyo"))

colnames(df_PyCengF) <- c("pais", "anyo", "produccionEF", "consumoEF")

factor <- 60

p9 <- df_PyCengF %>% 
  ggplot(aes(x=anyo, y = produccionEF)) + 
  geom_bar(stat = "identity", fill = "skyblue") + 
  geom_line(aes(y = consumoEF/factor)) + 
  scale_y_continuous(sec.axis = sec_axis(trans = ~.*factor,
                                         name = "Consumo")) + 
  facet_wrap(vars(pais)) +
  theme_light() + 
  labs(title = "Gráfico 9: Balance consumo/produccion de energias fosiles",
       caption = "Datos provenientes de Eurostat",
       x = "Año",
       y = "Produccion (MW)")


plotly::ggplotly(p9) 

```


## **Energías renovables**

```{r}
#| echo: false
df_PyCengR <- inner_join(dfEngR, df_consumoR,by = c("pais" = "pais", "anyo" = "anyo"))

colnames(df_PyCengR) <- c("pais", "anyo", "produccionER", "consumoER")

factor <- 60

p10 <- df_PyCengR %>% 
  ggplot(aes(x=anyo, y = produccionER)) + 
  geom_bar(stat = "identity", fill = "skyblue") + 
  geom_line(aes(y = consumoER/factor)) + 
  scale_y_continuous(sec.axis = sec_axis(trans = ~.*factor,
                                         name = "Consumo")) + 
  facet_wrap(vars(pais)) +
  theme_light() + 
  labs(title = "Gráfico 9: Balance consumo/produccion de energias renovables",
       caption = "Datos provenientes de Eurostat",
       x = "Año",
       y = "Produccion (MW)")


plotly::ggplotly(p10)
```

:::
------------------------------------------------------------------------

## Los precios de las energías {background-color="#036f7b"}

------------------------------------------------------------------------

### El gas

```{r, echo = FALSE, eval = TRUE, include =  FALSE}
#| echo: false
df_TotGas <- full_join(dfGas, dfGas07, by = c("geo"="geo","geo_code" = "geo_code", "periodo"="periodo",  "Total" = "Total"))

colnames(df_TotGas) <- c("Pais", "Anyo", "geo_code","Precio")

df_TotGasD <-  df_TotGas %>% group_by(Anyo) %>%  
  mutate(values.x.q.b = as.factor(ntile(Precio, n = 5))) %>%
  ungroup()

geometriasG <- get_eurostat_geospatial(resolution = "20", nuts_level = "0")
plot(geometriasG, max.plot = 1)

mapdataG <- inner_join(df_TotGasD, geometriasG, by = c("geo_code" = "id"))

mapdata_siG <- mapdataG %>%  filter(Anyo %in% c(2020, 2014, 2007, 1998))
```

```{r, message=FALSE}
#| echo: false
p11 <- ggplot(mapdata_siG) +
  geom_sf(aes(fill = values.x.q.b,  geometry = geometry), color = "black", size = .1) +
  scale_fill_brewer(palette = "Oranges") + 
  facet_wrap(vars(Anyo)) +
  labs(title = "Grafico 10: Evolucion del precio del gas",
       fill = "Precios",
       caption = "(C) EuroGeographics for the administrative boundaries") + theme_light() +
  coord_sf(xlim = c(-12,30), ylim = c(35,70)) + theme(legend.text = element_text(family = "mono"),
                                                      legend.title = element_text(face = "bold"),
                                                      legend.background = element_rect(linetype = "solid"),
                                                      legend.position = "bottom", legend.direction = "horizontal") +labs(subtitle = "(Paises utilizados a lo largo del analisis)")

p11
```

------------------------------------------------------------------------


### La electricidad

```{r, echo = FALSE, eval = TRUE, include =  FALSE}
#| echo: false

df_TotElec <- full_join(dfElec, dfElec07, by = c("geo"="geo", "geo_code" = "geo_code","periodo"="periodo",  "Total" = "Total"))

colnames(df_TotElec) <- c("Pais", "Anyo", "geo_code","Precio")

df_TotElecD <-  df_TotElec %>% group_by(Anyo) %>%  
  mutate(values.x.q.b = as.factor(ntile(Precio, n = 5))) %>%
  ungroup()

geometrias <- get_eurostat_geospatial(resolution = "20", nuts_level = "0")
plot(geometrias, max.plot = 1)

mapdata <- inner_join(df_TotElecD, geometrias, by = c("geo_code" = "id"))

mapdata_si <- mapdata %>%  filter(Anyo %in% c(2020, 2014, 2007, 1998))
```

```{r, message=FALSE}
#| echo: false
p12 <- ggplot(mapdata_si) +
  geom_sf(aes(fill = values.x.q.b,  geometry = geometry), color = "black", size = .1) +
  scale_fill_brewer(palette = "Oranges") + 
  facet_wrap(vars(Anyo)) +
  labs(title = "Evolucion del precio de la electricidad",
       fill = "Precios",
       caption = "(C) EuroGeographics for the administrative boundaries") + theme_light() +
  coord_sf(xlim = c(-12,30), ylim = c(35,70)) + theme(legend.text = element_text(family = "mono"),
    legend.title = element_text(face = "bold"),
    legend.background = element_rect(linetype = "solid"),
    legend.position = "bottom", legend.direction = "horizontal") +labs(subtitle = "(Paises utilizados a lo largo del analisis)")

p12
```

------------------------------------------------------------------------

### La correlación precios/inflación

::: {.panel-tabset}

## **Gas**

```{r}
#| echo: false
dfG_inf_p <- inner_join(df_inflation0, df_TotGas,by = c("Anyo" = "Anyo", "Pais" = "Pais", "geo_code" = "geo_code"))

dfE_inf_p <- inner_join(df_inflation0, df_TotElec,by = c("Anyo" = "Anyo", "Pais" = "Pais", "geo_code" = "geo_code"))

p13 <- dfG_inf_p %>% ggplot(aes(x = Inflacion, y = Precio, frame = Anyo)) + 
  geom_point(data = dfG_inf_p, aes(color = Anyo), size = 0.3) +
  geom_text(aes(label = geo_code), nudge_x = 0.5) +
  geom_smooth(method = "lm", se = FALSE) 

p14 <- dfE_inf_p %>% ggplot(aes(x = Inflacion, y = Precio, frame = Anyo)) + 
  geom_point(data = dfE_inf_p, aes(color = Anyo), size = 0.3) +
  geom_text(aes(label = geo_code), nudge_x = 0.5) +
  geom_smooth(method = "lm", se = FALSE) 
``` 
  
```{r,echo = FALSE, message = FALSE}
#| echo: false
plotly::ggplotly(p13)
```



## **Electricidad**

```{r,echo = FALSE, message = FALSE}
#| echo: false
plotly::ggplotly(p14)
```

:::

------------------------------------------------------------------------

## Conclusíon {background-color="#036f7b"}

- Aunque el consumo global de energía se ha mantenido relativamente estable durante los años, los tipos de energías consumidas han combiado. El consumo y la producción de energías renovables han aumentado, mientras que el consumo de combustibles fósiles ha disminuido un poco. 
Esto es muy positivo para el futuro, pero aún los países tienen que hacer esfuerzos, sobre todo en la producción de combustibles fósiles, que sigue siendo importante.

- No observamos una relación entre el consumo y la producción de combustibles fósiles. Esto se debe a que la producción es muy grande, por lo que hay muchas importaciones y exportaciones.
Sin embargo, esto es muy diferente en el caso de las energías renovables. Los países suelen consumir su propia producción porque es baja.

- En cuanto a la relación precio/inflación, la relación parece bastante clara para la mayoría de países. Y es que cuando aumenta la inflación, aumentan los precios, ya sean de gas o de electricidad, y durante uno o dos años, esto se ajustan los precios. Caso contrario si cae la inflación.

------------------------------------------------------------------------

## ¡¡¡Gracias por su atención y feliz navidad!!!

```{r}
#| echo: false
my_url <- "https://www.fete-ecoles.fr/media/k2/items/cache/a6026d97db0c19ba76f2c5c141efd324_XL.jpg"
```

![](https://www.fete-ecoles.fr/media/k2/items/cache/a6026d97db0c19ba76f2c5c141efd324_XL.jpg)


------------------------------------------------------------------------
